What happens when you initialize a repository? Why do you need to do it?
 	it creates a git repository file that contains meta data about the changes you made to the files in the repository. so you can the changes to the files you create andi follow the changes
How is the staging area different from the working directory and the repository? What value do you think it offers?	
	the working directory contains all the files while the staging area contains only the files you want to add to the current commit. the value is that even if you made changes in multipule files you can divide them into several commits easly
How can you use the staging area to make sure you have one commit per logical change?
	you can add to the staging area only files that have one logical change
What are some situations when branches would be helpful in keeping your history organized? How would branches help?
	when you want to try an experamental feature on your code sepretly from your current code. it would be helpfull since you could retun to a status where your code works in case you want to upgrade it without having to deal with the problems of your expramental feature.
How do the diagrams help you visualize the branch structure?
	it shows you where the brach was created and all its commits
What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
	the result is a combination of both branches. we represent the diagram in that way because you have access to the commits of both branches
What are the pros and cons of Git’s automatic merging vs. always doing merges manually?
	the pros of Git's automatic merging vs doing it manually is that it is likly quiker and less prone to errors if the function are not related to one another, the cons are that it doesn't understand the code and therefor can't murge simuilar functions with might be done by a human.
